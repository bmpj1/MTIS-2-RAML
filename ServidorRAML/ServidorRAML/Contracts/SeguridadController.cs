// Template: Base Controller (ApiControllerBase.t4) version 5.0

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Web.Http;
using System.Web.Http.Description;
using ServidorRAML.Seguridad.Models;

// Do not modify this file. This code was generated by AMF Server Scaffolder

namespace ServidorRAML.Seguridad
{
    [RoutePrefix("seguridad")]
    public partial class SeguridadController : ApiController
    {


/// <summary>
		/// Concede permisos de acceso enlazando una sala con un empleado - /seguridad/asignarPermisos
		/// </summary>
		/// <param name="content"></param>
		/// <param name="restkey">Una restkey valida almacenada en la bdd (Concede permisos para realizar al operacion)</param>
		/// <param name="dni">Un DNI valido de un empleado registrado.</param>
		/// <param name="sala">Un nombre de una sala</param>
		/// <returns>MultipleSeguridadAsignarPermisosPost</returns>
        [ResponseType(typeof(MultipleSeguridadAsignarPermisosPost))]
        [HttpPost]
        [Route("asignarPermisos")]
        public virtual IHttpActionResult PostBase([FromBody] string content,[FromUri] string restkey,[FromUri] string dni,[FromUri] string sala)
        {
            // Do not modify this code
                        return  ((ISeguridadController)this).Post(content,restkey,dni,sala);
                    }

/// <summary>
		/// Validar el acceso a una sala por parte de un usuario a partir de su DNI y el nombre de la Sala - /seguridad/validarUsuario
		/// </summary>
		/// <param name="restkey">Una restkey valida almacenada en la bdd (Concede permisos para realizar al operacion)</param>
		/// <param name="dni">DNI del empleado interesado.</param>
		/// <param name="sala">Sala a comprobar</param>
		/// <returns>MultipleSeguridadValidarUsuarioGet</returns>
        [ResponseType(typeof(MultipleSeguridadValidarUsuarioGet))]
        [HttpGet]
        [Route("validarUsuario")]
        public virtual IHttpActionResult GetBase([FromUri] string restkey,[FromUri] string dni,[FromUri] string sala)
        {
            // Do not modify this code
                        return  ((ISeguridadController)this).Get(restkey,dni,sala);
                    }

/// <summary>
		/// Eliminar el acceso del usuario a una sala - /seguridad/eliminarPermisos
		/// </summary>
		/// <param name="restkey">Una restkey valida almacenada en la bdd (Concede permisos para realizar al operacion)</param>
		/// <param name="dni">DNI del empleado</param>
		/// <param name="sala">Nombre de la sala</param>
		/// <returns>MultipleSeguridadEliminarPermisosDelete</returns>
        [ResponseType(typeof(MultipleSeguridadEliminarPermisosDelete))]
        [HttpDelete]
        [Route("eliminarPermisos")]
        public virtual IHttpActionResult DeleteBase([FromUri] string restkey,[FromUri] string dni,[FromUri] string sala)
        {
            // Do not modify this code
                            return  ((ISeguridadController)this).Delete(restkey,dni,sala);
                    }

/// <summary>
		/// Obtiene la lista de salas a las que puede acceder un empleado. - /seguridad/obtenerNiveles
		/// </summary>
		/// <param name="restkey">Una restkey valida almacenada en la bdd (Concede permisos para realizar al operacion)</param>
		/// <param name="dni">DNI del empleado a consultar.</param>
		/// <returns>MultipleSeguridadObtenerNivelesGet</returns>
        [ResponseType(typeof(MultipleSeguridadObtenerNivelesGet))]
        [HttpGet]
        [Route("obtenerNiveles")]
        public virtual IHttpActionResult GetObtenerNivelesBase([FromUri] string restkey,[FromUri] string dni)
        {
            // Do not modify this code
                        return  ((ISeguridadController)this).GetObtenerNiveles(restkey,dni);
                    }
    }
}
